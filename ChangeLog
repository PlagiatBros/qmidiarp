2009-10-10 Frank Kober <goemusic@yahoo.fr>
	* passwidget.*, mainwindow.cpp, seqdriver.cpp: "discard" logic 
	changed to "forward to" to be more intuitive
	* seqdriver.*, midiarp.*: footswitch now properly channel-filtered 
	and handled in midiarp
	* seqdriver.*: more cleanups regarding midi clock
	* mainwindow.cpp: show file menu by default

2009-10-07 Frank Kober <goemusic@yahoo.fr>
	* mainwindow.cpp: fixed: do not call delete in moduleDelete()
	* midilfo.cpp, lfowidget.cpp: offset slider and function enabled
	
2009-09-28 Frank Kober <goemusic@yahoo.fr>
	* seqdriver.*: switched from ALSA tick to ALSA realtime event
	scheduling to allow for smoother MIDI clock slave operation. 
	Internal handling continues to be in ticks. On-the-fly tempo changes 
	while running including those of the incoming MIDI clock are still 
	troublesome, starting midi clock speed is guessed from local 
	tempo value
	* mainwindow.cpp: fixed unmatched port value update when file
	loaded, stop Queue before clear(), add View menu, add tooltips,
	fix double employed Ctrl-N key sequence
	* logwidget.cpp: disable logging by default

2009-09-26 Frank Kober <goemusic@yahoo.fr>
	* mainwindow.*, lfowidget.*, arpwidget.*, seqdriver.*, arpdata.*: 
	new load/save/saveAs logic adapted from Guido's implementation in 
	qmidiroute started
	* seqdriver.cpp: some optimization for LFO data queueing
	* midiarp.cpp: fixed: repeatPatternMode "down" didn't work with chords
	in pattern, a bug from original version I think (spotted by Robert 
	Dietrich)
	* midilfo.cpp: fixed uninitialized isMuted state

2009-09-25 Frank Kober <goemusic@yahoo.fr>
	* lfoscreen.cpp: max number of divisor separators limited to 64
	* seqdriver.cpp: mute state of midilfo now handled, muting gets active 
	only after a completed LFO cycle

2009-09-24 Frank Kober <goemusic@yahoo.fr>
	* midilfo.cpp: fixed triangle waveform in terms of length
	* lfoscreen.*: new class for waveform display added
	* lfowidget.*: lfoscreen added and updated on every parameter change
	* seqdriver.cpp: fixed missing initial echo request when no 
	LFO present
	
2009-09-23 Frank Kober <goemusic@yahoo.fr>
	* MIDI LFO added as new feature. GUI-wise LFOs coexist with Arps in 
	tabwidget. They are handeled in parallel through arpdata.cpp and are
	using the same queue as the arps. Each LFO outputs MIDI controller 
	data in adjustable resolution, waveform, amplitude, table length.  
	* midilfo.*, lfowidget.*, lfoadd.xpm: added
	* arprename.xpm, arpremove.xpm: changed since they are used for arps
	and LFOs.
	* arpdata.*: add midiLfoList in parallel to midiArpList
	* seqdriver.* : LFO data requesting and queueing added
	* mainwindow.* : LFO handling added, load/save routines adapted
	* TODO *: 
	Widgets in the tabwidget are currently recognized by their name
	to distinguish between LFO and Arp. A better solution would be nice.
	LFO Amp offset slider has no function yet
	LFO mute has no function yet
	LFO GUI needs improvement
	implement Guido's file change monitoring/Load/Save/SaveAs

2009-09-22 Guido Scholz <guido.scholz@bayernline.de>
	* main.cpp: Command line help streamlined.

2009-09-20 Frank Kober <goemusic@yahoo.fr>
	* arpscreen.cpp: more optimizations avoiding double precision
	calculations
	* arpwidget.cpp: LineEdit used replacing PlainTextEdit, pattern edit
	toolbuttons disabled instead of hidden

2009-09-19 Frank Kober <goemusic@yahoo.fr>
	* mainwindow.cpp: Layout improved, using more QDockWidgets
	* arpwidget.cpp: QGridLayout used where appropriate
	* slider.*: tickStep parameter added, ticks added
	
2009-09-18 Frank Kober <goemusic@yahoo.fr>
	* arpwidget.cpp, midiarp.cpp: don't pass arpScreen to midiarp, 
	maximum height of arpScreen increased, groove values passed
	to arpscreen (not handled yet), queueTempo awareness added
	to midiarp for atk/rel display in seconds
	* arpscreen.cpp: math header removed, replace rectangles by lines to
	optimize, only one call to height() and width()
	* seqdriver.cpp: ALSA error number included in message, dependency 
	on C headers removed, midiarp gets queueTempo on every loop
	* mainwindow.cpp: PACKAGE replaced by APP_NAME on all occurences 
	
2009-09-17 Frank Kober <goemusic@yahoo.fr>
	* main.cpp: fixed start options, --help message extended, dependency
	on stdio.h removed
	
2009-09-16 Frank Kober <goemusic@yahoo.fr>
	* mainwindow.*, main.*: load filename without -f option, store About
	message in const char, AboutQt added, renamed load(QString) to
	fileOpen(QString), display filename in window title
	* configure.ac: APP_NAME added
	
2009-09-15 Frank Kober <goemusic@yahoo.fr>
	* mainwindow.*, passwidget.*: moved midi clock toggler into main
	toolbar, disable arp menu functions and file load when midi clock
	enabled
	* midiclock.xpm: icon added
	
2009-09-14 Frank Kober <goemusic@yahoo.fr>
	* midiarp.cpp: removeNote(*ev..) removes only one of potentially
	multiple occurences of notes at a time, note buffer cleared on queue 
	stop (both changes from original behaviour), rework note buffer to 
	correctly account for double strokes/releases also when received
	at same time (sequencers!), remove released vel=0 notes earlier to
	avoid temporary silences
	* mainwindow.cpp, arpwidget.cpp: envelope params added to disk-saved 
	items
	* mainwindow.cpp: unnecessary newTempo signal removed
	* arpwidget.cpp: display attack/release in seconds (not yet real)

2009-09-13 Frank Kober <goemusic@yahoo.fr>
	* midiarp.cpp: fixed attack function buffer getting corrupted by 
	removed notes.
	* seqdriver.cpp: changed ALSA client names in analogy to QMidiRoute,
	FootSwitch now applies to all arps in list
	TODO: handle FootSwitch to be channel-filtered as all note events
	* mainwindow.cpp: tempo added to disk-saved items keeping 
	compatibility with files saved with older versions

2009-09-12 Frank Kober <goemusic@yahoo.fr>
	* arpdata.cpp: fixed memory leak due to non-deleted QList item
	introduced by incomplete Qt4 port (gscholz)
	* mainwindow.cpp: make passWidget and logWidget dockable, hidden by
	default, floatable windows, adapt tab index conditions
	* midiarp.cpp: fixed from original: additional note was produced when 
	control items were present at end of pattern text.

2009-09-09 Frank Kober <goemusic@yahoo.fr>
	* midiarp.*, seqdriver.*, arpwidget.*:
	Simple envelope implementation started. When attack slider is
	set > 0, the velocity is ramped up from zero with alsa tick as
	timescale. When release is > 0, velocities of released notes are 
	ramped down until velocity=0 and then removed from buffer.
	Tick and release mark information is stored with note in buffer.  

2009-09-06 Frank Kober <goemusic@yahoo.fr>
	* mainwindow.cpp, midiarp.cpp, seqdriver.cpp, passwidget.cpp: 
	MIDI controller for muting arps implemented. The controller for the
	first arp can be configured in the settings tab, the other arps in 
	row are the following CC numbers. When the corresponding CC with
	value 127 is received, the arp mute state is toggled.
	* qmidiarp_*.ts: translations updated, obsoletes left atm

2009-09-03 Frank Kober <goemusic@yahoo.fr>
	* mainwindow.cpp: new Arp pulldown menu, keyboard shortcuts added
	* qmidiarp_*.ts: translations updated, obsoletes left atm

2009-08-29 Frank Kober <goemusic@yahoo.fr>
	* gui.* removed
	* mainwindow.cpp, mainwindow.h: created, containing MainWindow
	class, all Gui elements moved to MainWindow

2009-08-25 Frank Kober <goemusic@yahoo.fr>
	* midiarp.cpp: Queue start with empty pattern fixed 

2009-08-25 Frank Kober <goemusic@yahoo.fr>
	* gui.cpp, main.h: automatic filename extension added
	* gui.*, main.cpp: save and save As support added
	* gui.cpp: qt4 port error in removeArp(int index) hopefully fixed 
	(affecting load() when one of the three settings tabs was active)
	* gui.cpp, main.cpp: buttonBox toolbar gets attached to top widget
	* seqdriver.cpp: fixed FootSwitch event that still got copied to unmatched
	* passwidget.cpp: port numbers really starting at 1 now
	* known issue: Queue start when pattern empty but arp present

2009-08-23 Frank Kober <goemusic@yahoo.fr>
	* qmidiarp_fr.ts: French translation updated
	* slider.*, groovewidget.*, arpwidget.h: Sliders improved (idea: gscholz)
	* arpwidget.cpp: random box again visible, toggle button removed
	* qmidiarp2.xpm: adjusted image position in pixmap
	* arpwidget.cpp: in/out boxes Layout improved
	* arpwidget.cpp, seqdriver.cpp: Channel and Port numbers
	starting from 1 instead of 0

2009-08-22 Guido Scholz <guido.scholz@bayernline.de>
	* arpdata.cpp arpscreen.* gui.* midiarp.* seqdriver.*: Some
	cleanups, improved string parameter handling
	* arpwidget.cpp: Adjust size of Input/Output boxes

2009-08-16 Frank Kober <goemusic@yahoo.fr>
	* qmidiarp_fr.ts: French translation added

2009-08-16 Guido Scholz <guido.scholz@bayernline.de>
	* arpwidget.cpp: Keyboard shortcuts added for some widgets,
	fixed layout bug, texts made translatable
	* arpscreen.cpp: Obsolete pen.setColor() calls removed, unused C
	header files removed.
	* groovewidget.cpp, logwidget.cpp, passwidget.cpp: Keyboard
	shortcuts added, layout improved, label text made translatable
	* main.cpp: Support for Qt library message translation added
	* configure.ac, main.cpp, src/translations/*.ts: Support for
	application message translation added, German translation added
	
2009-08-15 Frank Kober <goemusic@yahoo.fr>
	* arpscreen.cpp: fixed fall through in switch and unfinished "."
	interpretation, removed resizeEvent(), set font at beginning of
	the drawEvent routine
	* gui.cpp, seqdriver.cpp: fixed queue start issue when no arp is
	present, the queue is now off on program startup and has to be
	enabled manually after addArp or load
	* passwidget.cpp: fixed yet another logic problem with enabling
	MIDI clock
	* seqdriver.cpp: take into account MIDI clock for ArpScreen
	follower line
	
2009-08-13 Guido Scholz <guido.scholz@bayernline.de>
	* package: cleanups, use .qmidiarprc instead of .qmarc
	
2009-08-13 Frank Kober <goemusic@yahoo.fr>
	* package: use xpm icons instead, which are part of sources now and
	EXTRA_DIST
	
2009-08-08 Frank Kober <goemusic@yahoo.fr>
	* package: optimized layout, removed unnecessary QWidgets (gscholz)
	* package: icons are now installed properly in 
	PREFIX/share/qmidiarp/pixmaps by using 
	a gcc ... -D option as defined in icons/Makefile.am
	* 
	* arpwidget.cpp, gui.cpp: pattern preset structure is now saved 
	in a .qmarc file created in the user's home if non-existent.
	* arpwidget.cpp: added 'removePattern' Toolbutton
	* arpwidget.cpp, midiarp.cpp: the mute button is now working by 
	setting all note velocities = 0 when checked
	* gui.h, main.cpp: use PACKAGE for version reporting

2009-08-02 Frank Kober <goemusic@yahoo.fr>
	* seqdriver.cpp, arpscreen.cpp: a follower line now indicates the 
	queue position in the arpscreen pattern. The position is derived 
	from the current tick and the pattern length and unaware of the actual 
	output notes. Therefore the queue is restarted at every pattern change.
	* arpwidget.cpp: a pattern preset structure is now in place in form 
	of a combobox. Pattern presets can be edited and stored to memory 
	(no diskwrite yet), pattern text is now hidden by default and 
	appears upon click of the new 'edit pattern' button
	* arpwidget.cpp: further GUI refactoring: 
	qtoolbuttons/actions replace the qpushbuttons, added icons,
	created a toolbar holding the main buttons and tempo spinner,
	todo: install icons in PREFIX/share/qmidiarp,
	added a mute checkbox (non-functional yet),
	random settings are now hidden by default and appear upon press 
	of a toolbutton, inserted various stretches to eliminate fixed width 
	labels, shamefully added arpscreen to the pattern groupbox

2009-07-15 Frank Kober <goemusic@yahoo.fr>
	* seqdriver.cpp: added support for damper footswitch to hold and buffer 
	incoming notes
	* seqdriver.cpp: queue start is now back working
	* gui.cpp: queue start button is grayed when midi clock use checked
		 
2009-07-12 Frank Kober <goemusic@yahoo.fr>
	* package: added autotools build environment, moved sources to the
	src subdirectory, updated COPYING file and added two sentences to
	the README, updated INSTALL file
	Remaining issues: 
	   Tempo needs to be the same as that of the midi clock master
	   Queue is not automatically started
	   Queue start button should be grayed when receiving MIDI clock start

2009-02-07 Frank Kober <goemusic@yahoo.fr>
	* package: added a graphical representation of the pattern text
	that is updated on every text change, included port counter in out
	port names and renamed in port to "QMidiARP in", initial MIDI
	real time clock start and stop support:
	  When MIDI clock is being checked, the queue is stopped and
	  started upon reception MIDI_START
	Known issue: the queue is not started automatically. You need to
	un/recheck 'start queue'
	MIDI ticks per beat and MIDI Clock Mode can be selected from the
	passWidget
	Added a switchable filter for MIDI Clock events to the logWidget.
	The logtext is now color
	minor UI tweaks:
	   Tempo Spinner and Queue Start Button now in the top row of the
	   GUI, visible all the time
	   Fixed maximum size of the groove and pass widgets 

2009-06-25 Frank Kober <goemusic@yahoo.fr>
	* package: corrected disable/enable behaviour of rename button,
	addArp and renameArp do now respect 'cancel' in name dialog
	corrected: renaming of all tabs including the three 'system' tabs
	was permitted
